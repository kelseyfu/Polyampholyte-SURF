#=======================================
# Lennard-Jones Fluid
#   Created by Kelsey Fu & Pierre Walker (2024/06/20)
#==================================

#======
# System Parameters
#======
# Initialize the system set up

units lj                # use LJ units 
atom_style full         # define atom style as full
boundary p p p          #set periodic boundary counditions in all 3 dimensions

#======
# Forcefield
#======

bond_style 		fene
special_bonds   fene    #set special bond parameters for FENE interactions

pair_style      lj/cut/coul/long 2.5 25.0   # use LJ with long-range Coulomb interactions, specifying cutoff distances
pair_modify     shift yes   #shift pair potential to 0 at the cutoff distance

dielectric      1.0
kspace_style    pppm   1.0e-4  #use PPPM (particle particle particle mesh) method for long-range Coulomb interactions with specified precision

read_restart restart1  #read the initial configuration and simulation parameters from input_data file

# Atom types will be:
# 1: Cation bead on polymer
# 2: Anion bead on polymer
# 3: Neutral bead on polymer
# 4: Cation salt
# 5: Anion salt
group          polymer type 1 2 3
group          cation type  4
group	       anion  type  5
group	       ion    type  4 5 

group          dump   type 1 2 3 4 5


#======
# Simulation Parameters
#======
neighbor        0.3 bin
neigh_modify    every 1 delay 3 check yes #modify neighbor list settings to update every 1 step, delay 3 steps, and check for updates

thermo          1000 #output thermodynamic information every 1000 steps
thermo_style    custom step temp epair ecoul ebond cpuremain  #customize thermo output to include step, temperature, and energy components
thermo_modify   flush yes norm no  #modify thermo settings to flush output and disable normalization

#======
# Run Simulation
#======
#------
# Step 3: Production run
#------
fix            dynamics    all langevin TEMP TEMP 7.01 222333
fix            2           all nve

dump           100 dump custom 1000 drop.lammpstrj id mol type q x y z
dump_modify    100 flush yes sort 1 append yes

variable Step equal "step"
variable retime equal STEPS-${Step}

run           ${retime}




